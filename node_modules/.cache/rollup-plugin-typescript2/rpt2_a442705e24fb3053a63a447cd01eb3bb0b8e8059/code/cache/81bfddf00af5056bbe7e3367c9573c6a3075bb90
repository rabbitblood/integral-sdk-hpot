{"code":"/**\r\n * This tick data provider does not know how to fetch any tick data. It throws whenever it is required. Useful if you\r\n * do not need to load tick data for your use case.\r\n */\r\nexport class NoTickDataProvider {\r\n    async getTick(_tick) {\r\n        throw new Error(NoTickDataProvider.ERROR_MESSAGE);\r\n    }\r\n    async nextInitializedTickWithinOneWord(_tick, _lte, _tickSpacing) {\r\n        throw new Error(NoTickDataProvider.ERROR_MESSAGE);\r\n    }\r\n}\r\nNoTickDataProvider.ERROR_MESSAGE = 'No tick data provider was given';\r\n//# sourceMappingURL=tickDataProvider.js.map","references":["D:/personal_programming_work/integral-sdk-hpot/src/types/BigIntish.ts"],"map":"{\"version\":3,\"file\":\"tickDataProvider.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/entities/tickDataProvider.ts\"],\"names\":[],\"mappings\":\"AAyBA;;;GAGG;AACH,MAAM,OAAO,kBAAkB;IAG7B,KAAK,CAAC,OAAO,CAAC,KAAa;QACzB,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,gCAAgC,CACpC,KAAa,EACb,IAAa,EACb,YAAoB;QAEpB,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;IACpD,CAAC;;AAZc,gCAAa,GAAG,iCAAiC,CAAC\"}","dts":{"name":"D:/personal_programming_work/integral-sdk-hpot/entities/tickDataProvider.d.ts","writeByteOrderMark":false,"text":"import { BigintIsh } from '../types/BigIntish';\r\n/**\r\n * Provides information about ticks\r\n */\r\nexport interface TickDataProvider {\r\n    /**\r\n     * Return information corresponding to a specific tick\r\n     * @param tick the tick to load\r\n     */\r\n    getTick(tick: number): Promise<{\r\n        liquidityNet: BigintIsh;\r\n    }>;\r\n    /**\r\n     * Return the next tick that is initialized within a single word\r\n     * @param tick The current tick\r\n     * @param lte Whether the next tick should be lte the current tick\r\n     * @param tickSpacing The tick spacing of the pool\r\n     */\r\n    nextInitializedTickWithinOneWord(tick: number, lte: boolean, tickSpacing: number): Promise<[number, boolean]>;\r\n}\r\n/**\r\n * This tick data provider does not know how to fetch any tick data. It throws whenever it is required. Useful if you\r\n * do not need to load tick data for your use case.\r\n */\r\nexport declare class NoTickDataProvider implements TickDataProvider {\r\n    private static ERROR_MESSAGE;\r\n    getTick(_tick: number): Promise<{\r\n        liquidityNet: BigintIsh;\r\n    }>;\r\n    nextInitializedTickWithinOneWord(_tick: number, _lte: boolean, _tickSpacing: number): Promise<[number, boolean]>;\r\n}\r\n"}}
