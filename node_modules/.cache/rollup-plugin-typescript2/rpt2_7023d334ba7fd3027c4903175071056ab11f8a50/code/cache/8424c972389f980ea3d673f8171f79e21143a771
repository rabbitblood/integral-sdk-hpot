{"code":"import { pack } from '@ethersproject/solidity';\r\n/**\r\n * Converts a route to a hex encoded path\r\n * @param route the v3 path to convert to an encoded path\r\n * @param exactOutput whether the route should be encoded in reverse, for making exact output swaps\r\n */\r\nexport function encodeRouteToPath(route, exactOutput) {\r\n    const firstInputToken = route.input.wrapped;\r\n    const { path, types } = route.pools.reduce(({ inputToken, path, types, }, pool, index) => {\r\n        const outputToken = pool.token0.equals(inputToken)\r\n            ? pool.token1\r\n            : pool.token0;\r\n        if (index === 0) {\r\n            return {\r\n                inputToken: outputToken,\r\n                types: ['address', 'address'],\r\n                path: [inputToken.address, outputToken.address],\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                inputToken: outputToken,\r\n                types: [...types, 'address'],\r\n                path: [...path, outputToken.address],\r\n            };\r\n        }\r\n    }, { inputToken: firstInputToken, path: [], types: [] });\r\n    return exactOutput\r\n        ? pack(types.reverse(), path.reverse())\r\n        : pack(types, path);\r\n}\r\n//# sourceMappingURL=encodeRouteToPath.js.map","references":["D:/personal_programming_work/integral-sdk-hpot/node_modules/@ethersproject/solidity/lib/index.d.ts","D:/personal_programming_work/integral-sdk-hpot/src/entities/pool.ts","D:/personal_programming_work/integral-sdk-hpot/src/entities/route.ts","D:/personal_programming_work/integral-sdk-hpot/src/entities/index.ts"],"map":"{\"version\":3,\"file\":\"encodeRouteToPath.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/encodeRouteToPath.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,yBAAyB,CAAC;AAK/C;;;;GAIG;AACH,MAAM,UAAU,iBAAiB,CAC/B,KAAgC,EAChC,WAAoB;IAEpB,MAAM,eAAe,GAAU,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;IAEnD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CACxC,CACE,EACE,UAAU,EACV,IAAI,EACJ,KAAK,GAC6D,EACpE,IAAU,EACV,KAAK,EAC8D,EAAE;QACrE,MAAM,WAAW,GAAU,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC;YACvD,CAAC,CAAC,IAAI,CAAC,MAAM;YACb,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;QAChB,IAAI,KAAK,KAAK,CAAC,EAAE;YACf,OAAO;gBACL,UAAU,EAAE,WAAW;gBACvB,KAAK,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;gBAC7B,IAAI,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,WAAW,CAAC,OAAO,CAAC;aAChD,CAAC;SACH;aAAM;YACL,OAAO;gBACL,UAAU,EAAE,WAAW;gBACvB,KAAK,EAAE,CAAC,GAAG,KAAK,EAAE,SAAS,CAAC;gBAC5B,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,WAAW,CAAC,OAAO,CAAC;aACrC,CAAC;SACH;IACH,CAAC,EACD,EAAE,UAAU,EAAE,eAAe,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CACrD,CAAC;IAEF,OAAO,WAAW;QAChB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;QACvC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACxB,CAAC\"}"}
