{"code":"import { defaultAbiCoder } from '@ethersproject/abi';\r\nimport { getAddress, getCreate2Address } from '@ethersproject/address';\r\nimport { keccak256 } from '@ethersproject/solidity';\r\nimport { keccak256 as keccak256BytesOnly } from '@ethersproject/keccak256';\r\nimport { zeroPad, concat } from \"@ethersproject/bytes\";\r\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\r\nimport { POOL_DEPLOYER_ADDRESSES, POOL_INIT_CODE_HASH } from \"../constants\";\r\n/**\r\n * Computes a pool address\r\n * @param poolDeployer The Algebra Pool Deployer address\r\n * @param tokenA The first token of the pair, irrespective of sort order\r\n * @param tokenB The second token of the pair, irrespective of sort order\r\n * @param initCodeHashManualOverride The initial code hash override\r\n * @returns The pool address\r\n */\r\nexport function computePoolAddress({ tokenA, tokenB, initCodeHashManualOverride, poolDeployer }) {\r\n    const [token0, token1] = tokenA.sortsBefore(tokenB)\r\n        ? [tokenA, tokenB]\r\n        : [tokenB, tokenA];\r\n    return getCreate2Address(poolDeployer ?? POOL_DEPLOYER_ADDRESSES[tokenA.chainId], keccak256(['bytes'], [\r\n        defaultAbiCoder.encode(['address', 'address'], [token0.address, token1.address]),\r\n    ]), initCodeHashManualOverride ?? POOL_INIT_CODE_HASH[tokenA.chainId]);\r\n}\r\nexport function computeCustomPoolAddress({ tokenA, tokenB, customPoolDeployer, initCodeHashManualOverride, mainPoolDeployer }) {\r\n    const [token0, token1] = tokenA.sortsBefore(tokenB)\r\n        ? [tokenA, tokenB]\r\n        : [tokenB, tokenA];\r\n    return getCreate2Address(mainPoolDeployer ?? POOL_DEPLOYER_ADDRESSES[tokenA.chainId], keccak256(['bytes'], [\r\n        defaultAbiCoder.encode(['address', 'address', 'address'], [customPoolDeployer, token0.address, token1.address]),\r\n    ]), initCodeHashManualOverride ?? POOL_INIT_CODE_HASH[tokenA.chainId]);\r\n}\r\nexport function computePoolAddressZkSync({ poolDeployer, tokenA, tokenB, initCodeHashManualOverride, }) {\r\n    const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]; // does safety checks\r\n    return getCreate2AddressZk(poolDeployer ?? POOL_DEPLOYER_ADDRESSES[tokenA.chainId], keccak256(['bytes'], [defaultAbiCoder.encode(['address', 'address'], [token0.address, token1.address])]), initCodeHashManualOverride ?? POOL_INIT_CODE_HASH[tokenA.chainId]);\r\n}\r\nfunction getCreate2AddressZk(from, salt, initCodeHash) {\r\n    const prefix = keccak256BytesOnly(toUtf8Bytes('zksyncCreate2'));\r\n    const addressBytes = keccak256BytesOnly(concat([prefix, zeroPad(from, 32), salt, initCodeHash, '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'])).slice(26);\r\n    return getAddress(addressBytes);\r\n}\r\n//# sourceMappingURL=computePoolAddress.js.map","references":["D:/personal_programming_work/integral-sdk-hpot/node_modules/@ethersproject/abi/lib/index.d.ts","D:/personal_programming_work/integral-sdk-hpot/node_modules/@ethersproject/address/lib/index.d.ts","D:/personal_programming_work/integral-sdk-hpot/node_modules/@ethersproject/solidity/lib/index.d.ts","D:/personal_programming_work/integral-sdk-hpot/node_modules/@ethersproject/keccak256/lib/index.d.ts","D:/personal_programming_work/integral-sdk-hpot/node_modules/@ethersproject/bytes/lib/index.d.ts","D:/personal_programming_work/integral-sdk-hpot/node_modules/@ethersproject/strings/lib/index.d.ts","D:/personal_programming_work/integral-sdk-hpot/src/entities/index.ts","D:/personal_programming_work/integral-sdk-hpot/src/constants/index.ts"],"map":"{\"version\":3,\"file\":\"computePoolAddress.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/computePoolAddress.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AACrD,OAAO,EAAE,UAAU,EAAE,iBAAiB,EAAE,MAAM,wBAAwB,CAAC;AACvE,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAC;AACpD,OAAO,EAAE,SAAS,IAAI,kBAAkB,EAAE,MAAM,0BAA0B,CAAC;AAC3E,OAAO,EAAa,OAAO,EAAE,MAAM,EAAE,MAAM,sBAAsB,CAAC;AAClE,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAA;AAEpD,OAAO,EAAE,uBAAuB,EAAE,mBAAmB,EAAE,MAAM,cAAc,CAAC;AAE5E;;;;;;;GAOG;AACH,MAAM,UAAU,kBAAkB,CAAC,EACjC,MAAM,EACN,MAAM,EACN,0BAA0B,EAC1B,YAAY,EAMb;IACC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC;QACjD,CAAC,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC;QAClB,CAAC,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACrB,OAAO,iBAAiB,CACtB,YAAY,IAAI,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,EACvD,SAAS,CACP,CAAC,OAAO,CAAC,EACT;QACE,eAAe,CAAC,MAAM,CACpB,CAAC,SAAS,EAAE,SAAS,CAAC,EACtB,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,CACjC;KACF,CACF,EACD,0BAA0B,IAAI,mBAAmB,CAAC,MAAM,CAAC,OAAO,CAAC,CAClE,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,wBAAwB,CAAC,EACvC,MAAM,EACN,MAAM,EACN,kBAAkB,EAClB,0BAA0B,EAC1B,gBAAgB,EAOjB;IACC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC;QACjD,CAAC,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC;QAClB,CAAC,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACrB,OAAO,iBAAiB,CACtB,gBAAgB,IAAI,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,EAC3D,SAAS,CACP,CAAC,OAAO,CAAC,EACT;QACE,eAAe,CAAC,MAAM,CACpB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,EACjC,CAAC,kBAAkB,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,CACrD;KACF,CACF,EACD,0BAA0B,IAAI,mBAAmB,CAAC,MAAM,CAAC,OAAO,CAAC,CAClE,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,wBAAwB,CAAC,EACvC,YAAY,EACZ,MAAM,EACN,MAAM,EACN,0BAA0B,GAM3B;IACC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA,CAAC,qBAAqB;IAC/G,OAAO,mBAAmB,CACxB,YAAY,IAAI,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,EACvD,SAAS,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EACxG,0BAA0B,IAAI,mBAAmB,CAAC,MAAM,CAAC,OAAO,CAAC,CAClE,CAAA;AACH,CAAC;AAED,SAAS,mBAAmB,CAAC,IAAY,EAAE,IAAe,EAAE,YAAuB;IAEjF,MAAM,MAAM,GAAG,kBAAkB,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAA;IAE/D,MAAM,YAAY,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,oEAAoE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;IAEhL,OAAO,UAAU,CAAC,YAAY,CAAC,CAAA;AAEjC,CAAC\"}"}
