{"code":"import JSBI from 'jsbi';\r\nimport { Price } from \"../entities\";\r\nimport { TickMath, encodeSqrtRatioX96, nearestUsableTick, priceToClosestTick } from \"../utils\";\r\nexport function tryParsePrice(baseToken, quoteToken, value) {\r\n    if (!baseToken || !quoteToken || !value) {\r\n        return undefined;\r\n    }\r\n    if (!value.match(/^\\d*\\.?\\d+$/)) {\r\n        return undefined;\r\n    }\r\n    const [whole, fraction] = value.split('.');\r\n    const decimals = fraction?.length ?? 0;\r\n    const withoutDecimals = JSBI.BigInt((whole ?? '') + (fraction ?? ''));\r\n    return new Price(baseToken, quoteToken, JSBI.multiply(JSBI.BigInt(10 ** decimals), JSBI.BigInt(10 ** baseToken.decimals)), JSBI.multiply(withoutDecimals, JSBI.BigInt(10 ** quoteToken.decimals)));\r\n}\r\nexport function tryParseTick(baseToken, quoteToken, value, tickSpacing) {\r\n    if (!baseToken || !quoteToken || !value || !tickSpacing) {\r\n        return undefined;\r\n    }\r\n    const price = tryParsePrice(baseToken, quoteToken, value);\r\n    if (!price) {\r\n        return undefined;\r\n    }\r\n    let tick;\r\n    // check price is within min/max bounds, if outside return min/max\r\n    const sqrtRatioX96 = encodeSqrtRatioX96(price.numerator, price.denominator);\r\n    if (JSBI.greaterThanOrEqual(sqrtRatioX96, TickMath.MAX_SQRT_RATIO)) {\r\n        tick = TickMath.MAX_TICK;\r\n    }\r\n    else if (JSBI.lessThanOrEqual(sqrtRatioX96, TickMath.MIN_SQRT_RATIO)) {\r\n        tick = TickMath.MIN_TICK;\r\n    }\r\n    else {\r\n        // this function is agnostic to the base, will always return the correct tick\r\n        tick = priceToClosestTick(price);\r\n    }\r\n    return nearestUsableTick(tick, tickSpacing);\r\n}\r\n//# sourceMappingURL=mint.js.map","references":["D:/personal_programming_work/integral-sdk-hpot/node_modules/jsbi/jsbi.d.ts","D:/personal_programming_work/integral-sdk-hpot/src/entities/index.ts","D:/personal_programming_work/integral-sdk-hpot/src/utils/index.ts"],"map":"{\"version\":3,\"file\":\"mint.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/functions/mint.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,EAAE,KAAK,EAAS,MAAM,aAAa,CAAC;AAC3C,OAAO,EAAE,QAAQ,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,MAAM,UAAU,CAAC;AAE/F,MAAM,UAAU,aAAa,CACzB,SAAiB,EACjB,UAAkB,EAClB,KAAc;IAEd,IAAI,CAAC,SAAS,IAAI,CAAC,UAAU,IAAI,CAAC,KAAK,EAAE;QACrC,OAAO,SAAS,CAAC;KACpB;IAED,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE;QAC7B,OAAO,SAAS,CAAC;KACpB;IAED,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAE3C,MAAM,QAAQ,GAAG,QAAQ,EAAE,MAAM,IAAI,CAAC,CAAC;IACvC,MAAM,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,GAAG,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC;IAEtE,OAAO,IAAI,KAAK,CACZ,SAAS,EACT,UAAU,EACV,IAAI,CAAC,QAAQ,CACT,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,QAAQ,CAAC,EAC3B,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,SAAS,CAAC,QAAQ,CAAC,CACxC,EACD,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC,CACzE,CAAC;AACN,CAAC;AAED,MAAM,UAAU,YAAY,CACxB,SAAiB,EACjB,UAAkB,EAClB,KAAc,EACd,WAAoB;IAGpB,IAAI,CAAC,SAAS,IAAI,CAAC,UAAU,IAAI,CAAC,KAAK,IAAI,CAAC,WAAW,EAAE;QACrD,OAAO,SAAS,CAAC;KACpB;IAED,MAAM,KAAK,GAAG,aAAa,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;IAE1D,IAAI,CAAC,KAAK,EAAE;QACR,OAAO,SAAS,CAAC;KACpB;IAED,IAAI,IAAY,CAAC;IAEjB,kEAAkE;IAClE,MAAM,YAAY,GAAG,kBAAkB,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;IAE5E,IAAI,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,QAAQ,CAAC,cAAc,CAAC,EAAE;QAChE,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC;KAC5B;SAAM,IAAI,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,QAAQ,CAAC,cAAc,CAAC,EAAE;QACpE,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC;KAC5B;SAAM;QACH,6EAA6E;QAC7E,IAAI,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC;KACpC;IAED,OAAO,iBAAiB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;AAChD,CAAC\"}"}
